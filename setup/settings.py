"""
Django settings for setup project.

Generated by 'django-admin startproject' using Django 5.0.4.
"""

from pathlib import Path
from decouple import config, Csv
from celery.schedules import crontab
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings
SECRET_KEY = config("SECRET_KEY")
DEBUG = config("DEBUG", cast=bool, default=False)
ALLOWED_HOSTS = config("ALLOWED_HOSTS", cast=Csv())

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Apps locais
    'cadastro_paciente.apps.CadastroPacienteConfig',
    'agenda.apps.AgendaConfig',
    'login_terapeuta.apps.LoginTerapeutaConfig',
    'login_pacientes',
    'home.apps.HomeConfig',
    'cadastro_paciente_paciente',
    'agenda_paciente',
    'pagina_inicial',
    
    # Apps de terceiros
    'django_celery_beat',  # Para agendamento persistente
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'setup.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'setup.wsgi.application'

# Database

import os

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('POSTGRES_DB', 'dbagendaterapeuta'),
        'USER': os.getenv('POSTGRES_USER', 'postgres'),
        'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'saltoprojetoUNIVESP78terapeuta5tela'),
        'HOST': os.getenv('POSTGRES_HOST', 'agenta-terapeuta-univesp.crmagsye2zoo.us-east-2.rds.amazonaws.com'),
        'PORT': '5432',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = "pt-br"
TIME_ZONE = "America/Sao_Paulo"
USE_I18N = True
USE_TZ = True

# Static files
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

# Default primary key field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configurações do Celery
CELERY_BROKER_URL = config('CELERY_BROKER_URL', default='redis://localhost:6379/0')
CELERY_RESULT_BACKEND = config('CELERY_RESULT_BACKEND', default='redis://localhost:6379/1')
CELERY_TIMEZONE = TIME_ZONE
CELERY_ENABLE_UTC = False
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_TIME_LIMIT = 30 * 60  # 30 minutos
CELERY_RESULT_EXPIRES = 86400  # 1 dia em segundos
CELERYD_PREFETCH_MULTIPLIER = 1  # Importante para tasks longas

# Configuração do agendamento de tarefas
CELERY_BEAT_SCHEDULE = {
    'enviar-lembretes-diarios': {
        'task': 'agenda.tasks.enviar_lembretes_automaticos',
        'schedule': crontab(hour=10, minute=0),  # Todos os dias às 10h
        'options': {
            'expires': 3600,  # Expira após 1 hora se não for executado
        },
    },
}

# Configurações do WhatsApp
WHATSAPP_WAIT_TIME = config('WHATSAPP_WAIT_TIME', default=15, cast=int)
WHATSAPP_CLOSE_TAB = config('WHATSAPP_CLOSE_TAB', default=True, cast=bool)
WHATSAPP_RETRY_ATTEMPTS = config('WHATSAPP_RETRY_ATTEMPTS', default=3, cast=int)

# Configurações de Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/debug.log'),
        },
        'celery_file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'logs/celery.log'),
            'formatter': 'verbose',
        },
    },
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': config('DJANGO_LOG_LEVEL', default='INFO'),
            'propagate': True,
        },
        'celery': {
            'handlers': ['console', 'celery_file'],
            'level': 'INFO',
            'propagate': False,
        },
        'agenda': {
            'handlers': ['console', 'file'],
            'level': 'DEBUG',
        },
    },
}

# Configurações de Autenticação
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/agenda/'
LOGOUT_REDIRECT_URL = '/'

# Configurações de Sessão
SESSION_COOKIE_AGE = 3600  # 1 hora
SESSION_SAVE_EVERY_REQUEST = True